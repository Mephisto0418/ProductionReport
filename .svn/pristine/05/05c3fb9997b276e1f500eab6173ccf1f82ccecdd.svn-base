Imports System.IO
Imports System.Linq
Imports Microsoft.VisualBasic.FileIO
Imports System.Threading


Public Class ReportUI
    Dim Version As String = "2.0.23.7.27.1"
    Dim Program As String = "ProductionReport"
    Public Area As String = ""
    Public TempFolder As String = "C:\ProductionReportLog\Temp\"
    Public UploadFolder As String = "C:\ProductionReportLog\Uploaded\"
    Public ProcInfo As New Dictionary(Of String, String())
    Dim isRefresh As Boolean = True '判定是否為是Timer刷新
    Dim Column_All As New List(Of String) '浮動欄位
    Dim Column As New List(Of String) '手動輸入欄位
    Dim Column_Query As New List(Of String) '自動帶入欄位
    Dim Column_Formula As New List(Of String) '運算欄位
    Dim Column_Formula_All As String '運算欄位
    Dim Column_CCF As String() = {"Trace Width(TOP)", "Trace Width(BOTTOM)", "Trace Space(TOP)", "Trace Space(BOTTOM)", "CuPad(TOP)", "CuPad(BOTTOM)"} '內層線路特殊欄位
    Dim Machine As String()
    Dim Cmd_Param As String = ""
    Dim Cmd_Formula As New List(Of String())
    Dim HistPath As String = "ProductionReportHist\ProductionReportHist.exe"
    Dim asr As New ProductionReport.My.MySettings
    Dim MFmodule As String = asr.Item("MFmodule")

    Private Sub ReportUI_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        '標題初始化
        Me.Text = "ReportUI v" & Version & " [維運 : 李博軒]"

        '建立Log資料夾
        If Not Directory.Exists(LogFolder) Then
            Directory.CreateDirectory(LogFolder)
        End If
        If Not Directory.Exists(TempFolder) Then
            Directory.CreateDirectory(TempFolder)
        End If
        If Not Directory.Exists(UploadFolder) Then
            Directory.CreateDirectory(UploadFolder)
        End If
        '暫停刷新資料直到選擇站點
        TimerRefresh.Stop()
        '站點名稱搜尋
        AreaName.Items.Clear()

        Using dt As DataTable = SQL_Query("SELECT  [OnlineVersion],[TestVersion]  FROM [Datamation_H3].[dbo].[H3_Leo_Program_Version] WHERE [Program] = '" & Program & "'")
            If Not (CInt(Version.Replace(".", "")) > CInt(dt(0)(0).ToString.Replace(".", "")) OrElse CInt(Version.Replace(".", "")) = CInt(dt(0)(1).ToString.Replace(".", ""))) Then
                MessageBox.Show("請確認是否使用最新版本")
                Environment.Exit(Environment.ExitCode)
                Application.Exit()
            End If
        End Using

        Using dt As DataTable = SQL_Query("SELECT DISTINCT [Area],[Password],[ProcName],ISNULL([Location],'') AS [Location],[Pkey] FROM [H3_Systematic].[dbo].[H3_Proc] WITH (NOLOCK) WHERE [Module] = " & MFmodule & "　ORDER BY [Area]") '搜尋資料庫內的所有站點和密碼
            For Each row As DataRow In dt.Rows
                AreaName.Items.Add(row("Area")) '在站點選項添加對應項目
                Dim procinfo As String() = {row("Password"), row("ProcName"), row("Location"), row("Pkey")}
                Me.ProcInfo.Add(row("Area"), procinfo) '新增與站點對應密碼
            Next
        End Using

    End Sub
    Private Sub ProcName_SelectedIndexChanged(sender As Object, e As EventArgs) Handles AreaName.SelectedIndexChanged
        Try
            '清空資料
            If AreaName.SelectedItem <> Nothing AndAlso Area = "" Or Area <> AreaName.SelectedItem Then
                Dim pw As String = InputBox("請輸入密碼：", "輸入密碼", "")
                If pw <> ProcInfo(AreaName.SelectedItem.ToString)(0) Then
                    MessageBox.Show("密碼輸入錯誤")
                    AreaName.SelectedItem = Area
                    Return
                End If
                isRefresh = True
                'DataGridView初始化
                ReportUI_DataGridView.DataSource = Nothing
                ReportUI_DataGridView.Rows.Clear()
                ReportUI_DataGridView.Columns.Clear()
                Column_All.Clear()
                Column.Clear()
                Column_Query.Clear()
                Column_Formula.Clear()
                Column_Formula_All = ""
                Cmd_Param = ""
                Cmd_Formula.Clear()

                '設定初始欄位
                Dim ColsOrigin() As String = {"日期", "班別", "前站結束時間", "開始時間", "結束時間", "料號", "批號", "層別", "站點", "機台", "產品類型", "入料片數", "出料片數", "過帳工號", "過帳人員", "操作員", "備註"}
                '生成模組通用欄位
                For Each col As String In ColsOrigin
                    ReportUI_DataGridView.Columns.Add(col, col)
                Next
                For Each dgvCol As DataGridViewColumn In ReportUI_DataGridView.Columns
                    If dgvCol.HeaderText <> "操作員" AndAlso dgvCol.HeaderText <> "備註" Then
                        dgvCol.ReadOnly = True
                        dgvCol.DefaultCellStyle.BackColor = SystemColors.ControlLight
                    End If
                    'dgvCol.SortMode = DataGridViewColumnSortMode.NotSortable '變更欄位不可排序
                    If dgvCol.HeaderText = "班別" Then dgvCol.Width = 40
                    If dgvCol.HeaderText = "日期" Or dgvCol.HeaderText = "前站結束時間" Or dgvCol.HeaderText = "開始時間" Or dgvCol.HeaderText = "結束時間" Or dgvCol.HeaderText = "機台" Then dgvCol.Width = 150
                    If dgvCol.HeaderText = "批號" Then dgvCol.Width = 110
                    If dgvCol.HeaderText = "工號" Or dgvCol.HeaderText = "入料片數" Or dgvCol.HeaderText = "出料片數" Then dgvCol.Width = 60
                    If dgvCol.HeaderText = "操作員" Then dgvCol.Width = 60
                Next

                '查詢客製化欄位設定
                Dim cmdProc As String = "SELECT pa.[PID] AS [Sort]
                                                     ,pa.[ParameterName]
                                                     ,ISNULL(pa.[isQuery],'') AS [isQuery]
                                                     ,ISNULL(r.[QueryCommand],'') AS [QueryCommand]
                                                     ,ISNULL(r.[QueryType],'') AS [QueryType]
                                                     ,CASE WHEN [QueryType] = '欄位間計算' THEN ISNULL(r.[Filter1],'') ELSE '' END AS [FormulaColumn]
                                                     ,ISNULL(pr.[Machine],'') AS [Machine]
                                                     FROM [H3_Systematic].[dbo].[H3_Production_ProcParameter] AS pa
                                                     LEFT JOIN [H3_Systematic].[dbo].[H3_Proc] AS pr WITH (NOLOCK) ON pr.[Pkey] = pa.[AreaID]
                                                     LEFT JOIN [H3_Systematic].[dbo].[H3_Production_ProcParameter_Rule] AS r ON pa.[QID] = r.[QID]
                                                     WHERE pr.[Area] = '" & AreaName.SelectedItem.ToString & "'
                                                     ORDER BY [Sort]"
                Dim dtProc As DataTable = SQL_Query(cmdProc)

                '取得設定篩選機台
                If dtProc.Rows.Count = 0 Then
                    Dim cmdMachine As String = "SELECT [Machine] 
                                     FROM [H3_Systematic].[dbo].[H3_Proc] WITH (NOLOCK)
                                     WHERE [Area] = '" & AreaName.SelectedItem.ToString & "'"
                    Dim dtMachine As DataTable = SQL_Query(cmdMachine)
                    Dim newMachine As String() = dtMachine(0)("Machine").ToString.Split(",")
                    ReDim Machine(newMachine.Length - 1)
                    Machine = newMachine
                Else
                    Dim newMachine As String() = dtProc(0)("Machine").ToString.Split(",")
                    ReDim Machine(newMachine.Length - 1)
                    Machine = newMachine
                End If


                '將手動和自動帶入參數分開儲存、建立
                For Each row As DataRow In dtProc.Rows
                    If Convert.ToBoolean(row("isQuery")) AndAlso row("QueryType") = "欄位間計算" Then
                        Column_Formula.Add(row("ParameterName").ToString) '儲存參數名稱
                        Dim strFormula() As String = {row("QueryCommand").ToString, row("FormulaColumn").ToString}
                        Cmd_Formula.Add(strFormula) '儲存計算欄位和公式
                        Column_Formula_All += row("FormulaColumn").ToString
                        '建立欄位
                        ReportUI_DataGridView.Columns.Add(row("ParameterName").ToString, row("ParameterName").ToString)
                        ReportUI_DataGridView.Columns(row("ParameterName").ToString).ReadOnly = True
                        ReportUI_DataGridView.Columns(row("ParameterName").ToString).DefaultCellStyle.BackColor = SystemColors.ControlLight
                        Column_All.Add(row("ParameterName").ToString)
                    ElseIf Convert.ToBoolean(row("isQuery")) Then
                        Column_Query.Add(row("ParameterName").ToString)  '儲存參數名稱
                        Cmd_Param = Cmd_Param + row("QueryCommand").ToString + vbCrLf  'SQL語法串接
                        '建立欄位
                        ReportUI_DataGridView.Columns.Add(row("ParameterName").ToString, row("ParameterName").ToString)
                        ReportUI_DataGridView.Columns(row("ParameterName").ToString).ReadOnly = True
                        ReportUI_DataGridView.Columns(row("ParameterName").ToString).DefaultCellStyle.BackColor = SystemColors.ControlLight
                        Column_All.Add(row("ParameterName").ToString)
                    Else
                        Column.Add(row("ParameterName"))
                        '建立欄位
                        ReportUI_DataGridView.Columns.Add(row("ParameterName").ToString, row("ParameterName").ToString)
                        Column_All.Add(row("ParameterName").ToString)
                    End If
                Next

                Dim btnCol As New DataGridViewButtonColumn()
                btnCol.HeaderText = "修改"
                btnCol.Name = "btnModify"
                btnCol.Text = "修改"
                Dim bc As New DataGridViewButtonCell()
                bc.FlatStyle = FlatStyle.Flat
                bc.Style.BackColor = Color.Cyan
                btnCol.CellTemplate = bc
                ReportUI_DataGridView.Columns.Add(btnCol)
                ReportUI_DataGridView.Columns.Add("上傳", "上傳")
                For Each dgvCol As DataGridViewColumn In ReportUI_DataGridView.Columns
                    'dgvCol.SortMode = DataGridViewColumnSortMode.NotSortable
                    If dgvCol.HeaderText = "修改" Then dgvCol.Width = 40
                    If dgvCol.HeaderText = "上傳" Then
                        dgvCol.Width = 40
                        dgvCol.ReadOnly = True
                    End If
                Next

                Area = AreaName.SelectedItem
            Else
                Return
            End If
            TimerRefresh.Start()
            TimerRefresh_Tick(sender, e)
        Catch ex As Exception
            WriteLog(ex, LogFilePath, "ProcName_SelectedIndexChanged")
        End Try
    End Sub
    Private Sub TimerRefresh_Tick(sender As Object, e As EventArgs) Handles TimerRefresh.Tick
        Try
            isRefresh = True
            ' 停止 DataGridView 的更新，以避免閃爍
            ReportUI_DataGridView.SuspendLayout()
            Dim proc As String() = ProcInfo(AreaName.SelectedItem.ToString)(1).Split(",")
            Dim StrMachine As String = ""
            For Each mac In Machine
                StrMachine += mac + ","
            Next
            StrMachine = StrMachine.Substring(0, StrMachine.Length - 1)
            For i = 0 To proc.Length - 1
                Dim cmdproc As String = "EXECUTE [H3_Systematic].[dbo].[ProductionQuery_Insert] @ProcName = '" + proc(i).Substring(0, 3) + "%" + proc(i).Substring(3, 3) + "%', @Location = '" & ProcInfo(AreaName.SelectedItem.ToString)(2) & "%', @AreaID = " & ProcInfo(AreaName.SelectedItem.ToString)(3) & ", @Machine = '" & StrMachine & "'"
                SQL_Query(cmdproc)
            Next
            Dim cmdcol As String = "EXECUTE [H3_Systematic].[dbo].[ProductionQuery_Columns_Insert] @AreaID = '" & ProcInfo(AreaName.SelectedItem.ToString)(3) & "'"
            SQL_Query(cmdcol)
            Dim cmdquery As String = "EXECUTE [H3_Systematic].[dbo].[ProductionQuery_NEW] @AreaID = '" & ProcInfo(AreaName.SelectedItem.ToString)(3) & "'"
            Dim new_dt As DataTable = SQL_Query(cmdquery)

            Dim lots As New List(Of String)

            ' 將新查詢到的資料與舊的資料合併，並只新增不重複的資料
            For Each new_dr As DataRow In new_dt.Rows
                If Machine(0) <> "" AndAlso new_dr("機台").ToString <> "" AndAlso Not Machine.Contains(new_dr("機台").ToString) Then
                    Continue For
                End If
                lots.Add(new_dr("批號").ToString)
                Dim RIndex As Integer
                Dim is_duplicate As Boolean = False
                For Each dr As DataGridViewRow In ReportUI_DataGridView.Rows
                    If new_dr("批號") = dr.Cells("批號").Value.ToString AndAlso new_dr("站點") = dr.Cells("站點").Value.ToString AndAlso new_dr("層別") = dr.Cells("層別").Value.ToString Then
                        is_duplicate = True
                        RIndex = dr.Index
                        Exit For
                    End If
                Next
                If Not is_duplicate Then
                    Dim MoveInTime As String = ""
                    Dim LastEndTime As String = ""
                    Dim CheckInTime As String = ""
                    Dim CheckOutTime As String = ""
                    If CType(new_dr("日期"), DateTime) > DateTime.Parse("2000-01-01 00:00:00") Then MoveInTime = CType(new_dr("日期"), DateTime).ToString("yyyy-MM-dd HH:mm:ss")
                    If CType(new_dr("前站結束時間"), DateTime) > DateTime.Parse("2000-01-01 00:00:00") Then LastEndTime = CType(new_dr("前站結束時間"), DateTime).ToString("yyyy-MM-dd HH:mm:ss")
                    If CType(new_dr("開始時間"), DateTime) > DateTime.Parse("2000-01-01 00:00:00") Then
                        CheckInTime = CType(new_dr("開始時間"), DateTime).ToString("yyyy-MM-dd HH:mm:ss")
                    End If
                    If CType(new_dr("結束時間"), DateTime) > DateTime.Parse("2000-01-01 00:00:00") Then CheckOutTime = CType(new_dr("結束時間"), DateTime).ToString("yyyy-MM-dd HH:mm:ss")
                    Dim para As New List(Of Object)
                    Dim ParaArray() As Object = {MoveInTime, new_dr("班別"), LastEndTime, CheckInTime, CheckOutTime, new_dr("料號"), new_dr("批號"), new_dr("層別"), new_dr("站點"), new_dr("機台"), new_dr("產品類型"), new_dr("入料片數"), new_dr("出料片數"), new_dr("過帳工號"), new_dr("過帳人員"), new_dr("操作員").ToString, new_dr("備註").ToString}
                    para.AddRange(ParaArray)
                    For Each col As String In Column_All
                        para.Add(new_dr(col))
                    Next
                    para.Add("")
                    If new_dr("已上傳").ToString = "False" Then
                        para.Add("")
                    Else
                        para.Add(new_dr("完成時間"))
                    End If

                    ReportUI_DataGridView.Rows.Insert(0, para.ToArray)
                Else
                    Dim MoveInTime As String = ""
                    Dim LastEndTime As String = ""
                    Dim CheckInTime As String = ""
                    Dim CheckOutTime As String = ""
                    If CType(new_dr("日期"), DateTime) > DateTime.Parse("2000-01-01 00:00:00") Then MoveInTime = CType(new_dr("日期"), DateTime).ToString("yyyy-MM-dd HH:mm:ss")
                    If CType(new_dr("前站結束時間"), DateTime) > DateTime.Parse("2000-01-01 00:00:00") Then LastEndTime = CType(new_dr("前站結束時間"), DateTime).ToString("yyyy-MM-dd HH:mm:ss")
                    If CType(new_dr("開始時間"), DateTime) > DateTime.Parse("2000-01-01 00:00:00") Then
                        CheckInTime = CType(new_dr("開始時間"), DateTime).ToString("yyyy-MM-dd HH:mm:ss")
                    End If
                    If CType(new_dr("結束時間"), DateTime) > DateTime.Parse("2000-01-01 00:00:00") Then CheckOutTime = CType(new_dr("結束時間"), DateTime).ToString("yyyy-MM-dd HH:mm:ss")
                    Dim para As New List(Of Object)
                    Dim ParaArray() As Object = {MoveInTime, new_dr("班別"), LastEndTime, CheckInTime, CheckOutTime, new_dr("料號"), new_dr("批號"), new_dr("層別"), new_dr("站點"), new_dr("機台"), new_dr("產品類型"), new_dr("入料片數"), new_dr("出料片數"), new_dr("過帳工號"), new_dr("過帳人員"), new_dr("操作員").ToString, new_dr("備註").ToString}
                    para.AddRange(ParaArray)
                    For Each col As String In Column_All
                        para.Add(new_dr(col))
                    Next
                    para.Add("")
                    If new_dr("已上傳").ToString = "False" Then
                        para.Add("")
                    Else
                        para.Add(new_dr("完成時間"))
                    End If
                    ReportUI_DataGridView.Rows.RemoveAt(RIndex)
                    ReportUI_DataGridView.Rows.Insert(RIndex, para.ToArray)
                End If
            Next
            DataGridViewRefresh(new_dt, lots)
            new_dt.Dispose()
            'ExportDataGridViewToDataTable(ReportUI_DataGridView)
            ' 恢復 DataGridView 的更新
            isRefresh = False
            CheckColumn()
            ReportUI_DataGridView.ResumeLayout()
        Catch ex As Exception
            WriteLog(ex, LogFilePath, "TimerRefresh")
        End Try
    End Sub

    Private Sub ReportUI_DataGridView_CellContentClick(sender As Object, e As DataGridViewCellEventArgs) Handles ReportUI_DataGridView.CellContentClick
        Try
            ' 確認是在 btncol 欄位點擊
            If e.ColumnIndex = ReportUI_DataGridView.Columns("btnModify").Index AndAlso e.RowIndex >= 0 Then
                ' 執行 ModifyButton_Click 事件
                ModifyButton_Click(sender, e)
            End If
        Catch ex As Exception
            If TypeOf ex Is System.NullReferenceException Then
                MessageBox.Show("此行無資料可修改")
            End If
        End Try
    End Sub

    Private Sub ModifyButton_Click(ByVal sender As Object, ByVal e As DataGridViewCellEventArgs)
        If ReportUI_DataGridView.Rows(e.RowIndex).Cells("上傳").Value IsNot Nothing AndAlso ReportUI_DataGridView.Rows(e.RowIndex).Cells("上傳").Value.ToString <> "" Then
            Return
        End If

        ' 將該行特定欄位 ReadOnly 屬性改為 False
        For i = ReportUI_DataGridView.Columns("備註").Index To ReportUI_DataGridView.Columns("btnModify").Index - 1
            If Column.Contains(ReportUI_DataGridView.Columns(i).Name) OrElse Column_CCF.Contains(ReportUI_DataGridView.Columns(i).Name) OrElse (ReportUI_DataGridView.Rows(e.RowIndex).Cells(i).Value IsNot Nothing AndAlso ReportUI_DataGridView.Rows(e.RowIndex).Cells(i).Value.ToString = "") Then
                ReportUI_DataGridView.Rows(e.RowIndex).Cells(i).ReadOnly = False
                ReportUI_DataGridView.Rows(e.RowIndex).Cells(i).Style.BackColor = SystemColors.ControlLightLight
            End If
        Next
    End Sub

    Private Sub CheckParaUploaded(ByVal row As DataGridViewRow)
        For i = 0 To ReportUI_DataGridView.Columns("上傳").Index - 1
            row.Cells(i).ReadOnly = True
            row.Cells(i).Style.BackColor = Color.Cyan
        Next
    End Sub

    Private Sub CheckColumn()
        For Each row As DataGridViewRow In ReportUI_DataGridView.Rows
            If row.Cells("上傳").Value IsNot Nothing AndAlso row.Cells("上傳").Value.ToString <> "" Then
                CheckParaUploaded(row)
            Else
                For i = ReportUI_DataGridView.Columns("備註").Index + 1 To ReportUI_DataGridView.Columns("btnModify").Index - 1
                    If row.Cells(i).Value IsNot Nothing AndAlso row.Cells(i).Value.ToString <> "" Then
                        row.Cells(i).ReadOnly = True
                        row.Cells(i).Style.BackColor = SystemColors.ControlLight
                    End If
                Next
                If row.Cells("操作員").Value IsNot Nothing AndAlso row.Cells("操作員").Value.ToString <> "" Then

                End If
            End If
        Next
    End Sub

    Private Sub Btn_TEST_Click(sender As Object, e As EventArgs) Handles Btn_TEST.Click
        TimerRefresh_Tick(sender, e)
    End Sub

    Private Sub ReportUI_DataGridView_CellValueChanged(sender As Object, e As DataGridViewCellEventArgs) Handles ReportUI_DataGridView.CellValueChanged
        Try
            Dim proc As String = ReportUI_DataGridView.Rows(e.RowIndex).Cells("站點").Value.ToString
            Dim lot As String = ReportUI_DataGridView.Rows(e.RowIndex).Cells("批號").Value.ToString
            Dim layer As String = ReportUI_DataGridView.Rows(e.RowIndex).Cells("層別").Value.ToString
            Dim ParaName As String = ReportUI_DataGridView.Columns(e.ColumnIndex).Name

            If Not isRefresh Then
                Dim cell As DataGridViewCell = ReportUI_DataGridView.Rows(e.RowIndex).Cells(e.ColumnIndex)
                If e.RowIndex >= 0 AndAlso e.ColumnIndex >= 0 Then
                    If Cmd_Formula.Count > 0 AndAlso Column_Formula_All.Contains(ReportUI_DataGridView.Columns(cell.ColumnIndex).Name) Then
                        ColumnFormula(cell)
                    End If
                End If

                If cell.Value IsNot Nothing AndAlso cell.Value.ToString <> "" Then

                    If cell.ColumnIndex = ReportUI_DataGridView.Columns("操作員").Index Then
                        ' 設定資料格為唯讀
                        cell.ReadOnly = True
                        cell.Style.BackColor = SystemColors.ControlLight
                        Dim cmd As String = "DECLARE @Val nvarchar(MAX)
                                                                  SET @Val = (SELECT ISNULL([OP],'') AS Val FROM [H3_Systematic].[dbo].[H3_ProductionLog] WHERE [AreaID] = " + ProcInfo(AreaName.SelectedItem.ToString)(3) + " AND [ProcName] = '" + proc + "' AND [Lotnum] = '" + lot + "' AND [Layer] = '" + layer + "' )
                                                                  IF @Val IS NULL OR @Val = ''
                                                                  BEGIN
                                                                  UPDATE [H3_Systematic].[dbo].[H3_ProductionLog]
                                                                  SET [OP] = '" + cell.Value.ToString + "'
                                                                  WHERE [AreaID] = " + ProcInfo(AreaName.SelectedItem.ToString)(3) + " AND [ProcName] = '" + proc + "' AND [Lotnum] = '" + lot + "' AND [Layer] = '" + layer + "'
                                                                  END"
                        SQL_Query(cmd)
                    ElseIf cell.ColumnIndex <> ReportUI_DataGridView.Columns("備註").Index Then
                        ' 設定資料格為唯讀
                        cell.ReadOnly = True
                        cell.Style.BackColor = SystemColors.ControlLight
                        Dim cmd As String = "DECLARE @Val nvarchar(MAX)
                                                                  SET @Val = (SELECT ISNULL([ParameterVaules],'') AS Val FROM [H3_Systematic].[dbo].[H3_ProductionParameter] WHERE [AreaID] = " + ProcInfo(AreaName.SelectedItem.ToString)(3) + " AND [ProcName] = '" + proc + "' AND [Lotnum] = '" + lot + "' AND [LayerName] = '" + layer + "' AND [ParameterName] = '" + ParaName + "' )
                                                                  IF @Val IS NULL OR @Val = ''
                                                                  BEGIN
                                                                  UPDATE [H3_Systematic].[dbo].[H3_ProductionParameter]
                                                                  SET [UploadTime] = '" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") + "',
                                                                          [ParameterVaules] = '" + cell.Value.ToString + "'
                                                                  WHERE [AreaID] = " + ProcInfo(AreaName.SelectedItem.ToString)(3) + " AND [ProcName] = '" + proc + "' AND [Lotnum] = '" + lot + "' AND [LayerName] = '" + layer + "' AND [ParameterName] = '" + ParaName + "'
                                                                  END"
                        SQL_Query(cmd)
                    Else
                        Dim cmd As String = "DECLARE @Val nvarchar(MAX)
                                                                  SET @Val = (SELECT ISNULL([Remark],'') AS Val FROM [H3_Systematic].[dbo].[H3_ProductionLog] WHERE [AreaID] = " + ProcInfo(AreaName.SelectedItem.ToString)(3) + " AND [ProcName] = '" + proc + "' AND [Lotnum] = '" + lot + "' AND [Layer] = '" + layer + "' )
                                                                  IF @Val IS NULL OR @Val = ''
                                                                  BEGIN
                                                                  UPDATE [H3_Systematic].[dbo].[H3_ProductionLog]
                                                                  SET [Remark] = '" + cell.Value.ToString + "'
                                                                  WHERE [AreaID] = " + ProcInfo(AreaName.SelectedItem.ToString)(3) + " AND [ProcName] = '" + proc + "' AND [Lotnum] = '" + lot + "' AND [Layer] = '" + layer + "'
                                                                  END"
                        SQL_Query(cmd)
                    End If
                End If
            End If
        Catch ex As Exception
            WriteLog(ex, LogFilePath, "DataGridView_CellValueChanged_" + ReportUI_DataGridView.Columns(e.ColumnIndex).Name + "_" + ReportUI_DataGridView.Rows(e.RowIndex).Cells("批號").Value.ToString)
        End Try
    End Sub

    Private Sub RrportUI_FormClosing(sender As Object, e As FormClosingEventArgs) Handles Me.FormClosing
        e.Cancel = True ' 取消視窗關閉操作
    End Sub

    Private Sub DataGridViewRefresh(ByVal new_dt As DataTable, ByVal lots As List(Of String))
        Try
            '查詢WIP
            Dim proc As String() = ProcInfo(AreaName.SelectedItem.ToString)(1).Split(",")
            Dim wip_dt As New DataTable
            For i = 0 To proc.Length - 1
                Dim cmdWIP As String = "  SELECT [CurrProcName] AS [站點],[LotNum] AS [批號],[LayerName] AS [層別]
                                                                    FROM [utchfacmrpt].[report].[dbo].[view_WIP] AS w WITH(NOLOCK),
                                                                    [H3_Systematic].[dbo].[H3_Proc] AS p WITH(NOLOCK)
                                                                    WHERE [LineID] = 29 AND p.[Pkey] = " + ProcInfo(AreaName.SelectedItem.ToString)(3) + " AND [ProcName] LIKE SUBSTRING([CurrProcName],1,3) + '%' + SUBSTRING([CurrProcName],5,3)"
                wip_dt = SQL_Query(cmdWIP)
            Next

            ' 比較 DataTable 中的每一行，更新 DataGridView 中的值
            For Each row As DataGridViewRow In ReportUI_DataGridView.Rows
                Dim proc_dgv As String = row.Cells("站點").Value.ToString()
                Dim lot_dgv As String = row.Cells("批號").Value.ToString()
                Dim layer_dgv As String = row.Cells("層別").Value.ToString()

                '確認每一筆DataGridView上的資料是否包含在最新查詢出來的Table
                If lots.Contains(lot_dgv) Then
                    '確認物料是否還在WIP
                    Dim ExistsWIP As Boolean = False
                    For Each wipRow As DataRow In wip_dt.Rows
                        If proc_dgv = wipRow("站點").ToString AndAlso lot_dgv = wipRow("批號").ToString AndAlso layer_dgv = wipRow("層別").ToString Then
                            ExistsWIP = True
                            Exit For
                        End If
                    Next

                    '若不在WIP則確認資料是否完整
                    If Not ExistsWIP Then
                        Dim isUpload As Boolean = False
                        isUpload = DataUpload(row)
                        '資料如果完整則Show提示字元
                        If isUpload Then
                            Notice.Text = "上傳完成,批號: " & lot_dgv & ", 時間: " & DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")
                        End If
                    Else
                        If Cmd_Formula.Count > 0 Then
                            For i = ReportUI_DataGridView.Columns("備註").Index + 1 To ReportUI_DataGridView.Columns("btnModify").Index - 1
                                If Column_Formula_All.Contains(ReportUI_DataGridView.Columns(row.Cells(i).ColumnIndex).Name) Then
                                    ColumnFormula(row.Cells(i))
                                End If
                            Next
                        End If
                    End If
                Else
                    '不包含在新的查詢結果則刪除此行
                    ReportUI_DataGridView.Rows.Remove(row)
                    Continue For
                End If
            Next
        Catch ex As Exception
            WriteLog(ex, LogFilePath, "DataGridViewRefresh")
        End Try
    End Sub

    Private Function DataUpload(row As DataGridViewRow) As Boolean
        Try
            Dim lot As String = row.Cells("批號").Value.ToString()
            Dim proc As String = row.Cells("站點").Value.ToString()
            Dim layer As String = row.Cells("層別").Value.ToString()

            Dim isFullData As Boolean = False
            Dim now As String = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")
            For i = ReportUI_DataGridView.Columns("備註").Index + 1 To ReportUI_DataGridView.Columns("btnModify").Index - 1 Step 1
                If row.Cells(i).Value IsNot Nothing AndAlso row.Cells(i).Value.ToString() <> "" Then
                    isFullData = True
                Else
                    isFullData = False
                    Exit For
                End If
            Next
            If row.Cells("操作員").Value IsNot Nothing AndAlso row.Cells("操作員").Value.ToString() <> "" Then isFullData = True Else isFullData = False
            '確認所有可填欄位接已填寫後變更資料Flag
            If isFullData AndAlso row.Cells("結束時間").Value.ToString <> "" Then
                Dim remark As String = ""
                If row.Cells("備註").Value <> Nothing Then remark = row.Cells("備註").Value.ToString
                Dim cmd As String = "UPDATE [H3_Systematic].[dbo].[H3_ProductionLog_NEW]
                                                          SET [UploadTime] = '" + now + "',
                                                              [Flag] = 1
                                                          WHERE [AreaID] = " + ProcInfo(AreaName.SelectedItem.ToString)(3) + " AND [ProcName] = '" + proc + "' AND [Lotnum] = '" + lot + "' AND [Layer] = '" + layer + "'"
                SQL_Query(cmd)

                row.Cells("上傳").Value = now
                For i = 0 To ReportUI_DataGridView.Columns("上傳").Index - 1
                    row.Cells(i).ReadOnly = True
                    row.Cells(i).Style.BackColor = Color.Cyan
                Next
                row.Cells("上傳").Style.BackColor = Color.Lime
                Return True
            Else
                Return False
            End If
            Return False
        Catch ex As Exception
            WriteLog(ex, LogFilePath, "DataUpload")
        End Try
    End Function

    Private Sub ToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles Query.Click
        Dim check() As Process = Process.GetProcessesByName("ProductionReportHist")
        If check.Length = 0 Then
            Dim ProcessInfo As New ProcessStartInfo(HistPath)
            Process.Start(ProcessInfo)
        End If
    End Sub

    Private Sub ColumnFormula(Cell As DataGridViewCell)
        Dim row As DataGridViewRow = ReportUI_DataGridView.Rows(Cell.RowIndex)
        Dim Notyet As Boolean = False
        Dim tarcol As String = ""
        Dim formulacol As String()
        Dim cmd As String
        Dim index As Integer = 0
        For Each cols In Cmd_Formula
            If cols(1).Contains(ReportUI_DataGridView.Columns(Cell.ColumnIndex).Name) Then
                formulacol = cols(1).Split(",")
                For Each col In formulacol
                    If row.Cells(col).Value Is Nothing OrElse String.IsNullOrEmpty(row.Cells(col).Value.ToString()) Then
                        Notyet = True
                        Exit For
                    Else
                        Notyet = False
                    End If
                Next
                If Notyet Then
                    Exit For
                Else
                    tarcol = Column_Formula(index)
                    cmd = cols(0)
                    For i = formulacol.Count To 1 Step -1
                        cmd = cmd.Replace("var" + i.ToString, row.Cells(formulacol(i - 1)).Value.ToString)
                    Next

                    Dim result As Double
                    result = Math.Round(ReCoding(cmd), 4)
                    row.Cells(tarcol).Value = result
                    ColumnFormula(row.Cells(tarcol))
                    Exit For
                End If

                index += 1
            Else
                index += 1
            End If
        Next

    End Sub

End Class
