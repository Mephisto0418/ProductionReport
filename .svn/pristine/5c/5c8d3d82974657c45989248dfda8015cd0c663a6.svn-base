Imports System.Data.SqlClient
Imports System.IO
Imports Microsoft.VisualBasic.FileIO
Imports System.Threading
Imports System.Text

Public Class ReportUI
    Dim LogFilePath As String = Path.GetDirectoryName(System.Reflection.Assembly.GetEntryAssembly().Location) & "\Log\"
    Dim ProcTemp As String = ""
    Dim LogFolder As String = "C:\ProductionReportLog\Log\"
    Dim UploadFolder As String = "C:\ProductionReportLog\Uploaded\"
    Dim isRefresh As Boolean = True '判定是否為是Timer刷新
    Dim Password As New Dictionary(Of String, String)
    Dim Cmd_Param As String = ""
    Dim Cmd_Formula As New List(Of String())

    Private Sub ReportUI_Load(sender As Object, e As EventArgs) Handles MyBase.Load

        '建立Log資料夾
        If Not Directory.Exists(LogFolder) Then
            Directory.CreateDirectory(LogFolder)
        End If
        If Not Directory.Exists(UploadFolder) Then
            Directory.CreateDirectory(UploadFolder)
        End If
        '暫停刷新資料直到選擇站點
        TimerRefresh.Stop()
        '站點名稱搜尋
        ProcName.Items.Clear()
        Using dt As DataTable = SQL_Query("SELECT [ProcName],[Password] FROM [H3_Systematic].[dbo].[H3_Proc] WITH (NOLOCK) ORDER BY ProcName") '搜尋資料庫內的所有站點和密碼
            For Each row As DataRow In dt.Rows
                ProcName.Items.Add(row(0)) '在站點選項添加對應項目
                Password.Add(row(0), row(1)) '新增與站點對應密碼
            Next
        End Using

    End Sub
    Private Sub ProcName_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ProcName.SelectedIndexChanged
        Try

            '清空資料
            If ProcTemp = "" Or ProcTemp <> ProcName.SelectedItem Then
                Dim pw As String = InputBox("請輸入密碼：", "輸入密碼", "")
                If pw <> Password(ProcName.SelectedItem.ToString) Then
                    MessageBox.Show("密碼輸入錯誤")
                    ProcName.SelectedItem = ProcTemp
                    Return
                End If
                isRefresh = True
                'DataGridView初始化
                ReportUI_DataGridView.DataSource = Nothing
                ReportUI_DataGridView.Rows.Clear()
                ReportUI_DataGridView.Columns.Clear()

                '設定初始欄位
                Dim ColsOrigin() As String = {"日期", "班別", "前站結束時間", "開始時間", "結束時間", "料號", "層別", "批號", "站點", "機台", "產品類型", "入料片數", "出料片數", "工號", "操作員"}
                Dim cmd As String = "SELECT [PID],[ParameterName],[isSQL],[SQL],[isFormula],[Formula],[FormulaColumn],[hasSpec],[isSpec_SQL],[Spec_SQL],[Spec] 
                                     FROM [H3_Systematic].[dbo].[H3_Production_ProcParameter] WITH (NOLOCK) 
                                     WHERE [ProcName] = '" & ProcName.SelectedItem.ToString & "'
                                     ORDER BY [PID]"
                Dim dtProc As DataTable = SQL_Query(cmd)

                Dim Column As New List(Of String) '手動輸入欄位
                Dim Column_Query As New List(Of String) '自動帶入欄位
                Dim Column_Formula As New List(Of String) '運算欄位
                Column_Query.Add("備份")
                '將手動和自動帶入參數分開儲存
                For Each row As DataRow In dtProc.Rows
                    If row("isSQL") Then
                        Column_Query.Add(row("ParameterName"))
                        Cmd_Param = Cmd_Param + row("SQL".ToString) + vbCrLf
                    ElseIf row("isFormula") Then
                        Column_Formula.Add(row("ParameterName"))
                        Dim strFormula() As String = {row("Formula").ToString, row("FormulaColumn").ToString}
                        Cmd_Formula.Add(strFormula)
                    Else
                        Column.Add(row("ParameterName"))
                    End If
                Next
                'Dim ProcCols As String = dtCol(0)(0)


                '生成模組通用欄位
                For Each col As String In ColsOrigin
                    ReportUI_DataGridView.Columns.Add(col, col)
                Next
                For Each dgvCol As DataGridViewColumn In ReportUI_DataGridView.Columns
                    dgvCol.ReadOnly = True
                    dgvCol.DefaultCellStyle.BackColor = SystemColors.ControlLight
                    'dgvCol.SortMode = DataGridViewColumnSortMode.NotSortable '變更欄位不可排序
                    If dgvCol.HeaderText = "班別" Then dgvCol.Width = 40
                    If dgvCol.HeaderText = "日期" Or dgvCol.HeaderText = "前站結束時間" Or dgvCol.HeaderText = "開始時間" Or dgvCol.HeaderText = "結束時間" Or dgvCol.HeaderText = "機台" Then dgvCol.Width = 150
                    If dgvCol.HeaderText = "批號" Then dgvCol.Width = 110
                    If dgvCol.HeaderText = "工號" Or dgvCol.HeaderText = "入料片數" Or dgvCol.HeaderText = "出料片數" Then dgvCol.Width = 60
                    If dgvCol.HeaderText = "操作員" Then dgvCol.Width = 60
                Next

                '生成各站點客制欄位(自動帶入)
                For Each col As String In Column_Query
                    ReportUI_DataGridView.Columns.Add(col, col)
                Next
                '生成各站點客制欄位(運算)
                For Each col As String In Column_Formula
                    ReportUI_DataGridView.Columns.Add(col, col)
                Next
                '生成各站點客制欄位(手動輸入)
                For Each col As String In Column
                    ReportUI_DataGridView.Columns.Add(col, col)
                Next

                Dim btnCol As New DataGridViewButtonColumn()
                btnCol.HeaderText = "修改"
                btnCol.Name = "btnModify"
                btnCol.Text = "修改"
                Dim bc As New DataGridViewButtonCell()
                bc.FlatStyle = FlatStyle.Flat
                bc.Style.BackColor = Color.Cyan
                btnCol.CellTemplate = bc
                ReportUI_DataGridView.Columns.Add(btnCol)

                For Each dgvCol As DataGridViewColumn In ReportUI_DataGridView.Columns
                    'dgvCol.SortMode = DataGridViewColumnSortMode.NotSortable
                    If dgvCol.HeaderText = "修改" Then dgvCol.Width = 40
                Next

                ProcTemp = ProcName.SelectedItem
                Dim fileQuery As String = "*" + ProcTemp.Substring(0, 3) + "*" + ProcTemp.Substring(3, 3)

                ' 取得Log資料夾底下的所有 CSV 檔案
                Dim csvFiles As String() = Directory.GetFiles(LogFolder, fileQuery + "*.csv")
                If csvFiles.Length > 0 Then
                    ' 解析 CSV 檔案內容並加入到 DataGridView 中
                    For Each csvFile In csvFiles
                        Using parser As New TextFieldParser(csvFile)
                            parser.TextFieldType = FieldType.Delimited
                            parser.SetDelimiters(",")

                            While Not parser.EndOfData
                                Dim fields As String() = parser.ReadFields()
                                ReportUI_DataGridView.Rows.Insert(0, fields)
                            End While
                        End Using
                        CheckPara()
                    Next
                End If
            End If
            TimerRefresh.Start()
            TimerRefresh_Tick(sender, e)
        Catch ex As Exception
            WriteLog(ex, LogFilePath, 1002)
        End Try
    End Sub
    Private Sub TimerRefresh_Tick(sender As Object, e As EventArgs) Handles TimerRefresh.Tick
        Try
            isRefresh = True
            ' 停止 DataGridView 的更新，以避免閃爍
            ReportUI_DataGridView.SuspendLayout()
            If ReportUI_DataGridView.Rows.Count > 0 Then
                ' 儲存 datagridview 中的資料
                Dim dt As New DataTable
                dt = CopyDataGridView()
                Dim lots As New List(Of String)

                ' 執行查詢，將查詢結果儲存在 DataTable 中
                Dim cmd As String = "EXECUTE [H3_Systematic].[dbo].[ProductionQuery] @ProcName = '" + ProcName.SelectedItem.ToString.Substring(0, 3) + "%" + ProcName.SelectedItem.ToString.Substring(3, 3) + "%'"
                Dim new_dt As DataTable = SQL_Query(cmd)
                ' 將新查詢到的資料與舊的資料合併，並只新增不重複的資料
                For Each new_dr As DataRow In new_dt.Rows
                    lots.Add(new_dr("批號").ToString)
                    Dim is_duplicate As Boolean = False
                    For Each dr As DataRow In dt.Rows
                        If new_dr("批號") = dr("批號") Then
                            is_duplicate = True
                            Exit For
                        End If
                    Next
                    Dim hist_dt As DataTable = SQL_Query("SELECT TOP (1) [Pkey] FROM [H3_Systematic].[dbo].[H3_ProductionLog] WHERE Lotnum = '" & new_dr("批號").ToString & "' AND ProcName = '" & new_dr("站點").ToString & "'")
                    If hist_dt.Rows.Count > 0 Then Continue For
                    If Not is_duplicate Then
                        Dim DN As String = ""
                        Dim MoveInTime As String = ""
                        Dim LastEndTime As String = ""
                        Dim CheckInTime As String = ""
                        Dim CheckOutTime As String = ""
                        If CType(new_dr("日期"), DateTime) > DateTime.Parse("2000-01-01 00:00:00") Then MoveInTime = CType(new_dr("日期"), DateTime).ToString("yyyy-MM-dd HH:mm:ss")
                        If CType(new_dr("前站結束時間"), DateTime) > DateTime.Parse("2000-01-01 00:00:00") Then LastEndTime = CType(new_dr("前站結束時間"), DateTime).ToString("yyyy-MM-dd HH:mm:ss")
                        If CType(new_dr("開始時間"), DateTime) > DateTime.Parse("2000-01-01 00:00:00") Then
                            CheckInTime = CType(new_dr("開始時間"), DateTime).ToString("yyyy-MM-dd HH:mm:ss")
                            If CType(new_dr("開始時間"), DateTime).TimeOfDay >= TimeSpan.Parse("07:20:00") AndAlso CType(new_dr("開始時間"), DateTime).TimeOfDay < TimeSpan.Parse("19:20:00") Then DN = "D" Else DN = "N"
                        End If
                        If CType(new_dr("結束時間"), DateTime) > DateTime.Parse("2000-01-01 00:00:00") Then CheckOutTime = CType(new_dr("結束時間"), DateTime).ToString("yyyy-MM-dd HH:mm:ss")
                        Dim ParaArray() As Object = {MoveInTime, DN, LastEndTime, CheckInTime, CheckOutTime, new_dr("料號"), new_dr("層別"), new_dr("批號"), new_dr("站點"), new_dr("機台"), new_dr("產品類型"), new_dr("入料片數"), new_dr("出料片數"), new_dr("工號"), new_dr("操作員")}
                        ReportUI_DataGridView.Rows.Insert(0, ParaArray)
                    End If
                Next
                DataGridViewRefresh(new_dt, lots)
            Else
                Dim dt As New DataTable
                Dim cmd As String = "EXECUTE [H3_Systematic].[dbo].[ProductionQuery] @ProcName = '" + ProcName.SelectedItem.ToString.Substring(0, 3) + "%" + ProcName.SelectedItem.ToString.Substring(3, 3) + "%'"
                dt = SQL_Query(cmd)
                For Each row As DataRow In dt.Rows
                    Dim DN As String = ""
                    Dim MoveInTime As String = ""
                    Dim LastEndTime As String = ""
                    Dim CheckInTime As String = ""
                    Dim CheckOutTime As String = ""
                    If CType(row("日期"), DateTime) > DateTime.Parse("2000-01-01 00:00:00") Then MoveInTime = CType(row("日期"), DateTime).ToString("yyyy-MM-dd HH:mm:ss")
                    If CType(row("前站結束時間"), DateTime) > DateTime.Parse("2000-01-01 00:00:00") Then LastEndTime = CType(row("前站結束時間"), DateTime).ToString("yyyy-MM-dd HH:mm:ss")
                    If CType(row("開始時間"), DateTime) > DateTime.Parse("2000-01-01 00:00:00") Then
                        CheckInTime = CType(row("開始時間"), DateTime).ToString("yyyy-MM-dd HH:mm:ss")
                        If CType(row("開始時間"), DateTime).TimeOfDay >= TimeSpan.Parse("07:20:00") AndAlso CType(row("開始時間"), DateTime).TimeOfDay < TimeSpan.Parse("19:20:00") Then DN = "D" Else DN = "N"
                    End If
                    If CType(row("結束時間"), DateTime) > DateTime.Parse("2000-01-01 00:00:00") Then CheckOutTime = CType(row("結束時間"), DateTime).ToString("yyyy-MM-dd HH:mm:ss")
                    Dim ParaArray() As Object = {MoveInTime, DN, LastEndTime, CheckInTime, CheckOutTime, row("料號"), row("層別"), row("批號"), row("站點"), row("機台"), row("產品類型"), row("入料片數"), row("出料片數"), row("工號"), row("操作員")}
                    ReportUI_DataGridView.Rows.Insert(0, ParaArray)
                Next
                dt.Clear()
            End If

            ExportDataGridViewToDataTable(ReportUI_DataGridView)
            ' 恢復 DataGridView 的更新
            isRefresh = False
            ReportUI_DataGridView.ResumeLayout()
        Catch ex As Exception
            WriteLog(ex, LogFilePath, 1001)
        End Try
    End Sub

    Private Sub ReportUI_DataGridView_CellContentClick(sender As Object, e As DataGridViewCellEventArgs) Handles ReportUI_DataGridView.CellContentClick
        Try
            ' 確認是在 btncol 欄位點擊
            If e.ColumnIndex = ReportUI_DataGridView.Columns("btnModify").Index AndAlso e.RowIndex >= 0 Then
                ' 執行 ModifyButton_Click 事件
                ModifyButton_Click(sender, e)
            End If
        Catch ex As Exception
            If TypeOf ex Is System.NullReferenceException Then
                MessageBox.Show("此行無資料可修改")
            End If
        End Try
    End Sub

    Private Sub ModifyButton_Click(ByVal sender As Object, ByVal e As DataGridViewCellEventArgs)

        ' 將該行特定欄位 ReadOnly 屬性改為 False
        For i = ReportUI_DataGridView.Columns("備註").Index To ReportUI_DataGridView.Columns("btnModify").Index - 1 Step 1
            ReportUI_DataGridView.Rows(e.RowIndex).Cells(i).ReadOnly = False
            ReportUI_DataGridView.Rows(e.RowIndex).Cells(i).Style.BackColor = SystemColors.ControlLightLight
        Next
    End Sub

    Private Sub CheckPara()
        For i = ReportUI_DataGridView.Columns("備註").Index To ReportUI_DataGridView.Columns("btnModify").Index - 1 Step 1
            If ReportUI_DataGridView.Rows(0).Cells(i).Value <> Nothing Then
                If ReportUI_DataGridView.Rows(0).Cells(i).Value.ToString <> "" Then
                    ReportUI_DataGridView.Rows(0).Cells(i).ReadOnly = True
                    ReportUI_DataGridView.Rows(0).Cells(i).Style.BackColor = SystemColors.ControlLight
                End If
            End If
        Next
    End Sub

    Private Sub Btn_TEST_Click(sender As Object, e As EventArgs) Handles Btn_TEST.Click
        TimerRefresh_Tick(sender, e)
    End Sub

    Private Sub ReportUI_DataGridView_CellValueChanged(sender As Object, e As DataGridViewCellEventArgs) Handles ReportUI_DataGridView.CellValueChanged
        Try
            If Not isRefresh Then
                If e.RowIndex >= 0 AndAlso e.ColumnIndex >= 0 Then
                    Dim cell As DataGridViewCell = ReportUI_DataGridView.Rows(e.RowIndex).Cells(e.ColumnIndex)
                    If cell.Value <> Nothing Then
                        If cell.Value.ToString <> "" Then
                            If cell.ColumnIndex <> ReportUI_DataGridView.Columns("備註").Index Then
                                ' 設定資料格為唯讀
                                cell.ReadOnly = True
                                cell.Style.BackColor = SystemColors.ControlLight
                                ExportDataGridViewRowToDataTable(ReportUI_DataGridView.Rows(e.RowIndex))
                            Else
                                ExportDataGridViewRowToDataTable(ReportUI_DataGridView.Rows(e.RowIndex))
                            End If
                        End If
                    End If
                End If
            End If
        Catch ex As Exception
            WriteLog(ex, LogFilePath, 1003)
        End Try
    End Sub

    Private Sub ReportUI_DataGridView_CellLeave(sender As Object, e As DataGridViewCellEventArgs) Handles ReportUI_DataGridView.CellLeave
        Try
            If Not isRefresh Then
                If e.RowIndex >= 0 AndAlso e.ColumnIndex >= 0 Then
                    Dim cell As DataGridViewCell = ReportUI_DataGridView.Rows(e.RowIndex).Cells(e.ColumnIndex)
                    If Not cell.ReadOnly Then
                        If cell.Value <> Nothing Then
                            If cell.Value.ToString <> "" Then
                                If cell.ColumnIndex <> ReportUI_DataGridView.Columns("備註").Index Then
                                    ' 設定資料格為唯讀
                                    cell.ReadOnly = True
                                    cell.Style.BackColor = SystemColors.ControlLight
                                    ExportDataGridViewRowToDataTable(ReportUI_DataGridView.Rows(e.RowIndex))
                                Else
                                    ExportDataGridViewRowToDataTable(ReportUI_DataGridView.Rows(e.RowIndex))
                                End If
                            End If
                        End If
                    End If
                End If
            End If
        Catch ex As Exception
            WriteLog(ex, LogFilePath, 1003)
        End Try
    End Sub

    Private Sub RrportUI_FormClosing(sender As Object, e As FormClosingEventArgs) Handles Me.FormClosing
        e.Cancel = True ' 取消視窗關閉操作
    End Sub

    Private Function CopyDataGridView() As DataTable
        ' 建立一個 DataTable
        Dim dt As New DataTable()

        ' 新增 DataColumn
        For Each column As DataGridViewColumn In ReportUI_DataGridView.Columns
            If column.Index <> ReportUI_DataGridView.Columns("btnModify").Index And column.Index <> ReportUI_DataGridView.Columns("btnTest").Index Then
                dt.Columns.Add(column.Name)
            End If
        Next

        ' 新增 DataRow
        For Each row As DataGridViewRow In ReportUI_DataGridView.Rows
            ' 如果這一列是新增列，就跳過
            If Not row.IsNewRow Then
                ' 建立新的 DataRow
                Dim dataRow As DataRow = dt.NewRow()

                ' 將每個儲存格的值存入 DataRow
                For Each cell As DataGridViewCell In row.Cells
                    If cell.ColumnIndex <> ReportUI_DataGridView.Columns("btnModify").Index And cell.ColumnIndex <> ReportUI_DataGridView.Columns("btnTest").Index Then
                        dataRow(cell.ColumnIndex) = cell.Value
                    End If
                Next

                ' 新增 DataRow 到 DataTable
                dt.Rows.Add(dataRow)
            End If
        Next

        Return dt
    End Function

    Private Sub DataGridViewRefresh(ByVal new_dt As DataTable, ByVal lots As List(Of String))
        Try
            ' 建立一個 Dictionary，用於存放每個 lot 對應的資料行
            'Dim rowsByLot As New Dictionary(Of String, List(Of DataGridViewRow))
            Dim rows As New List(Of DataGridViewRow)
            'Dim lots As New List(Of String)

            ' 將每個資料列加入對應的 List 中
            For Each row As DataGridViewRow In ReportUI_DataGridView.Rows
                'Dim lot As String = row.Cells("批號").Value.ToString()
                'If Not rowsByLot.ContainsKey(lot) Then
                '    rowsByLot.Add(lot, New List(Of DataGridViewRow))
                'End If
                'rowsByLot(lot).Add(row)
                rows.Add(row)
                'lots.Add(row.Cells("批號").Value.ToString())
            Next

            ' 比較 DataTable 中的每一行，更新 DataGridView 中的值
            For Each row As DataGridViewRow In rows
                Dim lot_dgv As String = row.Cells("批號").Value.ToString
                If lots.Contains(lot_dgv) Then
                    For Each dr As DataRow In new_dt.Rows

                        Dim lot As String = dr("批號").ToString()
                        If lot_dgv = lot Then
                            DataUpdate(dr, row)
                            Exit For
                        End If
                    Next
                Else
                    Dim isUpload As Boolean = DataUpload(row)

                    If Not isUpload Then
                        ' 比較其他欄位的值是否相同
                        Dim dt_up As DataTable = SQL_Query("EXECUTE[H3_Systematic].[dbo].[ProductionQuery_nonWIP] @Proc ='" & row.Cells("站點").Value.ToString & "' ,@Lot = '" & row.Cells("批號").Value.ToString & "'")
                        For Each dr_up As DataRow In dt_up.Rows
                            DataUpdate(dr_up, row)
                        Next
                    Else
                        Notice.Text = "上傳成功,批號: " & lot_dgv & ", 時間: " & DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")
                    End If
                End If
            Next
        Catch ex As Exception
            WriteLog(ex, LogFilePath, 1004)
        End Try
    End Sub

    Private Sub DataUpdate(ByVal dr As DataRow, ByVal row As DataGridViewRow)
        For i = 0 To ReportUI_DataGridView.Columns("備註").Index - 1
            Dim columnindex As Integer = row.Cells(i).ColumnIndex
            Dim columnname As String = ReportUI_DataGridView.Columns(columnindex).Name
            If columnname = "班別" Then Continue For
            If columnindex <> ReportUI_DataGridView.Columns("批號").Index Then '判斷是否為批號欄位
                If TypeOf row.Cells(i).Value Is DBNull OrElse row.Cells(i).Value Is Nothing OrElse String.IsNullOrEmpty(row.Cells(i).Value.ToString()) Then '判斷datagridview欄位是否為空
                    If Not (TypeOf dr(columnname) Is DBNull OrElse dr(columnname) Is Nothing OrElse String.IsNullOrEmpty(dr(columnname).ToString())) Then '判斷查詢的資料數值是否為空
                        If dr(columnname).GetType Is GetType(DateTime) Then '判斷欄位資料型別是否為日期
                            Dim value As DateTime
                            If DateTime.TryParse(dr(columnname).ToString(), value) AndAlso value.Year < 2000 Then '判斷日期是否為0
                                row.Cells(i).Value = "" '欄位設定為空
                                If row.Cells(i).ColumnIndex = ReportUI_DataGridView.Columns("開始時間").Index Then row.Cells("班別").Value = "" '判斷"開始時間"若為空,"班別"也為空
                            ElseIf row.Cells(i).ColumnIndex = ReportUI_DataGridView.Columns("開始時間").Index Then '判斷欄位是否為"開始時間"
                                row.Cells(i).Value = CType(dr(columnname), DateTime).ToString("yyyy-MM-dd HH:mm:ss") 'datagridview欄位值設定為特定日期格式
                                If CType(dr(columnname), DateTime).TimeOfDay >= TimeSpan.Parse("07:20:00") AndAlso CType(dr(columnname), DateTime).TimeOfDay < TimeSpan.Parse("19:20:00") Then row.Cells("班別").Value = "D" Else row.Cells("班別").Value = "N" '設定班別時間
                            Else
                                row.Cells(i).Value = CType(dr(columnname), DateTime).ToString("yyyy-MM-dd HH:mm:ss") 'datagridview欄位值設定為特定日期格式
                            End If
                        Else
                            row.Cells(i).Value = dr(columnname) '假如資料不是日期，datagridview欄位值設定
                        End If
                    End If
                End If
            End If
        Next
    End Sub

    Private Sub ExportToCSV(data As DataTable, logfolder As String, lot As String, proc As String, index As String)
        Dim fileName As String = String.Format("{0}{3}_{1}_{2}.csv", logfolder, lot, proc, index)
        Dim sb As New StringBuilder()

        ' 寫入資料
        For Each row As DataRow In data.Rows
            For Each column As DataColumn In data.Columns
                sb.Append(row(column).ToString()).Append(",")
            Next
            sb.Remove(sb.Length - 1, 1) ' 刪除最後一個逗號
            sb.AppendLine()
        Next

        ' 將 CSV 字串寫入檔案
        File.WriteAllText(fileName, sb.ToString(), Encoding.UTF8)
    End Sub

    Private Sub ExportDataGridViewToDataTable(dataGridView As DataGridView)
        Try
            Dim index As Integer = 0
            '刪除原檔案
            Dim fileQuery As String = "*" + ProcTemp.Substring(0, 3) + "*" + ProcTemp.Substring(3, 3)
            Dim FileToDelete As String() = Directory.GetFiles(LogFolder, fileQuery + "*.csv")
            For Each Files In FileToDelete
                File.Delete(Files)
            Next

            For i = dataGridView.Rows.Count - 1 To 0 Step -1
                If Not dataGridView.Rows(i).IsNewRow Then
                    index += 1
                    Dim lot As String = dataGridView.Rows(i).Cells("批號").Value.ToString()
                    Dim proc As String = dataGridView.Rows(i).Cells("站點").Value.ToString()
                    'Dim data As DataTable = CType(row.DataBoundItem, DataRowView).Row.Table
                    Dim data As New DataTable()

                    'Adding the Columns.
                    For Each column As DataGridViewColumn In ReportUI_DataGridView.Columns
                        If column.Index = ReportUI_DataGridView.Columns("btnModify").Index And column.Index = ReportUI_DataGridView.Columns("btnTest").Index Then
                            Continue For
                        End If
                        data.Columns.Add(column.HeaderText)
                    Next

                    'Adding the Rows.

                    data.Rows.Add()
                    For Each cell As DataGridViewCell In dataGridView.Rows(i).Cells
                        If cell.ColumnIndex = ReportUI_DataGridView.Columns("btnModify").Index And cell.ColumnIndex = ReportUI_DataGridView.Columns("btnTest").Index Then
                            Continue For
                        End If
                        If TypeOf cell.Value Is DBNull OrElse cell.Value Is Nothing OrElse String.IsNullOrEmpty(cell.Value.ToString()) Then
                            ' 當值為 DBNull、Nothing 或空字串時
                            data.Rows(data.Rows.Count - 1)(cell.ColumnIndex) = ""
                        Else
                            ' 當值不是 DBNull、Nothing 且不是空字串時
                            data.Rows(data.Rows.Count - 1)(cell.ColumnIndex) = cell.Value.ToString()
                        End If
                        'If cell.Value = Nothing Then
                        '    data.Rows(data.Rows.Count - 1)(cell.ColumnIndex) = ""
                        'Else
                        '    data.Rows(data.Rows.Count - 1)(cell.ColumnIndex) = cell.Value.ToString()
                        'End If

                    Next

                    ExportToCSV(data, LogFolder, lot, proc, index.ToString("000"))
                End If
            Next
        Catch ex As Exception
            WriteLog(ex, LogFilePath, 1005)
        End Try
    End Sub

    Private Sub ExportDataGridViewRowToDataTable(dgvrow As DataGridViewRow)
        Try
            If Not dgvrow.IsNewRow Then
                Dim lot As String = dgvrow.Cells("批號").Value.ToString()
                Dim proc As String = dgvrow.Cells("站點").Value.ToString()
                'Dim data As DataTable = CType(DataGridViewRow.DataBoundItem, DataRowView).Row.Table
                '獲取原檔案名稱
                Dim fileQuery As String = "*" + lot + "*" + proc
                Dim FileName As String = Directory.GetFiles(LogFolder, fileQuery + "*.csv")(0)

                Dim data As New DataTable()

                'Adding the Columns.
                For Each column As DataGridViewColumn In ReportUI_DataGridView.Columns
                    If column.Index = ReportUI_DataGridView.Columns("btnModify").Index And column.Index = ReportUI_DataGridView.Columns("btnTest").Index Then
                        Continue For
                    End If
                    data.Columns.Add(column.HeaderText)
                Next

                'Adding the Rows.

                data.Rows.Add()
                For Each cell As DataGridViewCell In dgvrow.Cells
                    If cell.ColumnIndex = ReportUI_DataGridView.Columns("btnModify").Index And cell.ColumnIndex = ReportUI_DataGridView.Columns("btnTest").Index Then
                        Continue For
                    End If
                    If cell.Value = Nothing Then
                        data.Rows(data.Rows.Count - 1)(cell.ColumnIndex) = ""
                    Else
                        data.Rows(data.Rows.Count - 1)(cell.ColumnIndex) = cell.Value.ToString()
                    End If

                Next

                ExportToCSV(data, LogFolder, lot, proc, CInt(FileName.Split("\")(3).Split("_")(0)).ToString("000"))
            End If
        Catch ex As Exception
            WriteLog(ex, LogFilePath, 1005)
        End Try
    End Sub
    Private Function DataUpload(row As DataGridViewRow) As Boolean
        Try
            Dim lot As String = row.Cells("批號").Value.ToString()
            Dim proc As String = row.Cells("站點").Value.ToString()
            'Dim data As DataTable = CType(DataGridViewRow.DataBoundItem, DataRowView).Row.Table
            '獲取原檔案名稱
            Dim FileQuery As String = "*" + lot + "*" + proc
            Dim FilePath As String() = Directory.GetFiles(LogFolder, FileQuery + "*.csv")
            Dim FileName As String
            If FilePath.Length > 0 Then
                FileName = FilePath(0).Split("\")(3)
            Else
                Return False
            End If

            Dim isFullData As Boolean = False
            Dim now As DateTime = DateTime.Now
            For i = 15 To ReportUI_DataGridView.Columns("btnModify").Index - 1 Step 1
                If row.Cells(i).Value <> Nothing Then
                    If row.Cells(i).Value.ToString() <> "" Then
                        isFullData = True
                    Else
                        isFullData = False
                        Exit For
                    End If
                Else
                    isFullData = False
                    Exit For
                End If
            Next
            If isFullData AndAlso row.Cells("結束時間").Value.ToString <> "" Then
                Dim remark As String = ""
                If row.Cells("備註").Value <> Nothing Then remark = row.Cells("備註").Value.ToString
                Dim LogUpload As String = "INSERT INTO [H3_Systematic].[dbo].[H3_ProductionLog] " &
                                  " ([UploadTime],[SystemTime],[Class],[LastEndTime],[StartTime],[EndTime],[Partnum],[Lotnum],[ProcName],[EQID],[IType],[Inputpcs],[Outputpcs],[WID],[User],[Remark])" &
                                  " VALUES ('" & now.ToString("yyyy-MM-dd HH:mm:ss") & "','" & row.Cells("日期").Value.ToString & "','" & row.Cells("班別").Value.ToString & "','" & row.Cells("前站結束時間").Value.ToString & "','" & row.Cells("開始時間").Value.ToString & "','" & row.Cells("結束時間").Value.ToString & "','" & row.Cells("料號").Value.ToString & "','" & row.Cells("批號").Value.ToString & "','" & row.Cells("站點").Value.ToString & "','" & row.Cells("機台").Value.ToString & "','" & row.Cells("產品類型").Value.ToString & "','" & row.Cells("入料片數").Value.ToString & "','" & row.Cells("出料片數").Value.ToString & "','" & row.Cells("工號").Value.ToString & "','" & row.Cells("操作員").Value.ToString & "','" & remark & "')"
                    SQL_Query(LogUpload)
                For i = 15 To ReportUI_DataGridView.Columns("btnModify").Index - 1
                    Dim ParaUpload As String = "INSERT INTO [H3_Systematic].[dbo].[H3_ProductionParameter] " &
                                               " ([Lotnum],[ProcName],[ParameterName],[ParameterVaules],[SystemTime],[UploadTime])" &
                                               " VALUES ('" & row.Cells("批號").Value.ToString & "','" & row.Cells("站點").Value.ToString & "','" & ReportUI_DataGridView.Columns(row.Cells(i).ColumnIndex).HeaderText & "','" & row.Cells(i).Value.ToString & "','" & row.Cells("日期").Value.ToString & "','" & now.ToString("yyyy-MM-dd HH:mm:ss") & "')"
                    SQL_Query(ParaUpload)
                Next
                ReportUI_DataGridView.Rows.Remove(row)
                File.Move(LogFolder & FileName, UploadFolder & FileName)
                Return True
            Else
                Return False
            End If
            Return False
        Catch ex As Exception
            WriteLog(ex, LogFilePath, 1006)
        End Try
    End Function

    Private Sub ReportUI_DataGridView_CellValidated(sender As Object, e As DataGridViewCellEventArgs) Handles ReportUI_DataGridView.CellValidated
        TimerRefresh_Tick(sender, e)
    End Sub

    Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click

        If TextBox1.Text = "" OrElse TextBox2.Text = "" Then
            Return
        End If
        Dim cmd As String = "Imports System 
Public Class Calculator 
 Public Function Calculate() as Double
 Dim result As Double = 0
  result = CDbl(""var1"") / CDbl(""var2"")
  Return result
  
 End Function 
End Class"
        'cmd.Replace("var1", TextBox1.Text)
        'cmd.Replace("var2", TextBox2.Text)

        cmd = Replace(cmd, "var1", TextBox1.Text)
        cmd = Replace(cmd, "var2", TextBox2.Text)

        Label1.Text = ReCoding(cmd).ToString
    End Sub
End Class
